{"version":3,"file":"static/js/485.c14c4b5b.chunk.js","mappings":"gUAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAU,mCACVC,EAAW,sCAEXC,EAAmB,mCAAG,8FAC3BH,EAAAA,EAAAA,IAAA,mCAAsCC,IADX,mFAAH,qDAGnBG,EAAiB,mCAAG,WAAMC,GAAN,iFACzBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,oBAAsCJ,IADb,mFAAH,sDAGjBK,EAAgB,mCAAG,WAAMD,GAAN,iFACxBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,4BAA8CJ,IADtB,mFAAH,sDAGhBM,EAAmB,mCAAG,WAAMF,GAAN,iFAC3BL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,4BAA8CJ,EAA9C,YAD2B,mFAAH,sDAGnBO,EAAkB,mCAAG,WAAMC,GAAN,iFAC1BT,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,kBAAmDQ,EAAnD,YAD0B,mFAAH,qD,iHChBlBC,EAAUC,EAAAA,GAAAA,GAAH,0IASPC,EAAYD,EAAAA,GAAAA,GAAH,6TAeTE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,kDAITI,EAAaJ,EAAAA,GAAAA,EAAH,2H,mBC1BVK,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACpBC,GAAWC,EAAAA,EAAAA,MAEjB,GAAIF,IAAc,GAElB,OACE,SAACP,EAAD,UACGO,EAAUG,KAAI,YAAyD,IAAtDC,EAAqD,EAArDA,GAAIC,EAAiD,EAAjDA,eAAgBC,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,YACnD,OACE,SAACZ,EAAD,CAAoBa,SAAS,IAA7B,UACE,UAACZ,EAAD,CACEa,GAAE,kBAAaL,GACfM,MAAO,CAAEC,KAAMV,GACfO,SAAS,KAHX,UAKGD,GACC,gBACEK,IAAK3B,EAAAA,GAAWsB,EAChBM,IAAKR,EACLS,MAAO,IACPC,OAAQ,OAGV,gBACEH,IAAKI,EACLH,IAAI,aACJC,MAAO,IACPC,OAAQ,OAGZ,SAACjB,EAAD,UAAaO,GAAkBC,QArBnBF,EAyBnB,KAGN,C,oICxCYa,E,MAAYvB,GAAAA,GAAH,kK,gDC+BtB,EA1Ba,WACX,OAA4CwB,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,YACR,mCAAC,8GAEqBrC,EAAAA,EAAAA,MAFrB,cAESsC,EAFT,gBAGSJ,EAAkBI,EAAIC,KAAKC,SAHpC,uBAISJ,GAAW,GAJpB,yDAMGK,QAAQC,IAAR,2CACAC,EAAAA,EAAAA,GAAa,0CAPhB,0DAAD,sDAUD,GAAE,KAGD,iCACE,SAACZ,EAAD,8BACA,SAAClB,EAAA,EAAD,CAAWC,UAAWmB,KACtB,SAACW,EAAA,EAAD,CAAQT,QAASA,MAGtB,C,oGC5BYQ,EAAe,SAAAE,GAAO,OACjCC,EAAAA,GAAAA,MAAYD,EAAS,CACnBE,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,WATwB,EAYtBC,EAAc,SAAAX,GAAO,OAChCC,EAAAA,GAAAA,KAAWD,EAAS,CAClBE,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,WATuB,C","sources":["components/Api/Api.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","services/notifications.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const API_KEY = '14ce8915ef52d801924d89668f2ca827';\nexport const IMG_PATH = 'https://image.tmdb.org/t/p/original';\n\nexport const fetchTrendingMovies = async () =>\n  await axios.get(`trending/all/day?api_key=${API_KEY}`);\n\nexport const fetchMovieDetails = async movieId =>\n  await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n\nexport const fetchCastByMovie = async movieId =>\n  await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}`);\n\nexport const fetchReviewsByMovie = async movieId =>\n  await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&page=1`);\n\nexport const fetchBySearchMovie = async query =>\n  await axios.get(`search/movie?api_key=${API_KEY}&query=${query}&page=1`);\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 0;\n  margin: 40px 0;\n  gap: 30px;\n`;\n\nexport const MovieItem = styled.li`\n  width: 240px;\n  background-color: #740101ba;\n  box-shadow: inset 0 0 30px 1px rgb(0 0 0 / 75%),\n    0 11px 9px -5px rgb(0 0 0 / 75%);\n  border-radius: 5px;\n  overflow: hidden;\n  transition: scale 250ms linear, box-shadow 250ms linear;\n\n  &:hover,\n  &:focus {\n    scale: 1.1;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const MovieTitle = styled.p`\n  text-align: center;\n  padding: 10px;\n  color: white;\n  font-size: 15px;\n  font-weight: 700;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { IMG_PATH } from 'components/Api/Api';\nimport { MovieUl, MovieItem, MovieLink, MovieTitle } from './MovieList.styled';\nimport defaultMovieLogo from '../../images/logo-movie-tape-cinema.png';\n\nexport const MovieList = ({ moviesArr }) => {\n  const location = useLocation();\n\n  if (moviesArr === []) return;\n\n  return (\n    <MovieUl>\n      {moviesArr.map(({ id, original_title, original_name, poster_path }) => {\n        return (\n          <MovieItem key={id} tabIndex=\"2\">\n            <MovieLink\n              to={`/movies/${id}`}\n              state={{ from: location }}\n              tabIndex=\"-1\"\n            >\n              {poster_path ? (\n                <img\n                  src={IMG_PATH + poster_path}\n                  alt={original_title}\n                  width={240}\n                  height={320}\n                />\n              ) : (\n                <img\n                  src={defaultMovieLogo}\n                  alt=\"defaulLogo\"\n                  width={240}\n                  height={320}\n                />\n              )}\n              <MovieTitle>{original_title || original_name}</MovieTitle>\n            </MovieLink>\n          </MovieItem>\n        );\n      })}\n    </MovieUl>\n  );\n};\n","import styled from 'styled-components';\n\nexport const HomeTitle = styled.h2`\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  color: white;\n  text-transform: uppercase;\n`;\n","import { useState, useEffect } from 'react';\nimport { HomeTitle } from './Home.styled';\nimport { fetchTrendingMovies } from 'components/Api/Api';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\nimport { errorMessage } from 'services/notifications';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    (async function getTrendingMovies() {\n      try {\n        const res = await fetchTrendingMovies();\n        await setTrendingMovies(res.data.results);\n        await setLoading(false);\n      } catch {\n        console.log(`Oops! Something went wrong! Try again!`);\n        errorMessage(`Oops! Something went wrong! Try again!`);\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      <HomeTitle>Trending today</HomeTitle>\n      <MovieList moviesArr={trendingMovies} />\n      <Loader loading={loading} />\n    </>\n  );\n};\n\nexport default Home;\n","import 'react-toastify/dist/ReactToastify.min.css';\nimport { toast } from 'react-toastify';\n\nexport const errorMessage = message =>\n  toast.error(message, {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'colored',\n  });\n\nexport const infoMessage = message =>\n  toast.info(message, {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'colored',\n  });\n"],"names":["axios","API_KEY","IMG_PATH","fetchTrendingMovies","fetchMovieDetails","movieId","fetchCastByMovie","fetchReviewsByMovie","fetchBySearchMovie","query","MovieUl","styled","MovieItem","MovieLink","Link","MovieTitle","MovieList","moviesArr","location","useLocation","map","id","original_title","original_name","poster_path","tabIndex","to","state","from","src","alt","width","height","defaultMovieLogo","HomeTitle","useState","trendingMovies","setTrendingMovies","loading","setLoading","useEffect","res","data","results","console","log","errorMessage","Loader","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","infoMessage"],"sourceRoot":""}